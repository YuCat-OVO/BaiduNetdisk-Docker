name: Build & Release

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths-ignore:
      - ".github/**"
      - "docs/**"
      - "**.md"
      - "get_version.py"

env:
  IMAGE_NAME: baidunetdisk-docker
  DOCKERHUB_SLUG: crazymax/linguist
  GHCR_SLUG: ghcr.io/yucat-ovo/baidunetdisk-docker

jobs:
  Build:
    name: Build
    outputs:
      matrix: ${{ steps.platforms.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Create matrix
        id: platforms
        run: |
          echo "matrix=$(docker buildx bake image-all --print | jq -cr '.target."image-all".platforms')" >>${GITHUB_OUTPUT}

      - name: Set variables
        id: set-vars
        run: |
          VERSION="1.0.4"
          GITHUB_REF=${{ github.ref }}
          BRACH=${GITHUB_REF#refs/heads/}
          DATE=$(date '+%Y-%m-%dT%H:%M:%S%Z')
          ARCH=${{ matrix.arch }}
          PLATFORM_PAIR=${ARCH//\//-}
          PLATFORM=${ARCH//linux\//}

          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "GITHUB_REF=${GITHUB_REF}" >> $GITHUB_OUTPUT
          echo "BRACH=${BRACH}" >> $GITHUB_OUTPUT
          echo "DATE=${DATE}" >> $GITHUB_OUTPUT
          echo "PLATFORM_PAIR=${PLATFORM_PAIR}" >> $GITHUB_OUTPUT
          echo "PLATFORM=${PLATFORM}" >> $GITHUB_OUTPUT

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.set-vars.outputs.VERSION }}
            type=raw,value=${{ steps.set-vars.outputs.BRACH }}
            type=raw,value=${{ steps.set-vars.outputs.PLATFORM }}
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.arch }}
          build-args: |
            BUILD_DATE=${{ steps.set-vars.outputs.DATE }}
            VERSION=${{ steps.set-vars.outputs.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ steps.set-vars.outputs.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  Merge:
    runs-on: ubuntu-latest
    needs:
      - Build
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Set variables
        id: set-vars
        run: |
          VERSION="1.0.3"
          GITHUB_REF=${{ github.ref }}
          BRACH=${GITHUB_REF#refs/heads/}
          DATE=$(date '+%Y-%m-%dT%H:%M:%S%Z')
          ACTOR=${{ github.actor }}

          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "GITHUB_REF=${GITHUB_REF}" >> $GITHUB_OUTPUT
          echo "BRACH=${BRACH}" >> $GITHUB_OUTPUT
          echo "DATE=${DATE}" >> $GITHUB_OUTPUT
          echo "ACTOR=${ACTOR,,}" >> $GITHUB_OUTPUT

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.set-vars.outputs.VERSION }}
            type=raw,value=${{ steps.set-vars.outputs.BRACH }}
            type=raw,value=latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ steps.set-vars.outputs.ACTOR }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
